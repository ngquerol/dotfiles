" 
" (G)vim configuration file
"
" Author: Nicolas G. Querol <nicolas.gquerol@gmail.com>
" 

set nocompatible
filetype off

" Vundle {{{
set rtp+=~/.vim/bundle/vundle
call vundle#rc()

" let Vundle manage Vundle
Bundle 'gmarik/vundle'

" Vundles {{{
" github repos
Bundle 'tangledhelix/vim-octopress'
Bundle 'majutsushi/tagbar'
Bundle 'scrooloose/nerdtree'
Bundle 'SirVer/ultisnips'
Bundle 'Shougo/neocomplcache'
Bundle 'Shougo/neocomplcache-snippets-complete'
Bundle 'Raimondi/delimitMate'
Bundle 'sjl/gundo.vim'
" vim-script repos
" non-github repos
" }}}

" }}}

" General {{{
filetype plugin indent on
syntax on

" Filetypes {{{
au BufRead,BufNewFile *.md set filetype=markdown
" }}}

let mapleader=","
let maplocalleader = "\\"

set hidden
set mouse=a
set backspace=indent,eol,start
set incsearch
set hlsearch
set ignorecase
set smartcase
set history=1000
set title
set ttyfast
set lazyredraw
set novisualbell
set noerrorbells
set encoding=utf-8
set termencoding=utf-8
" }}}

" Appearance {{{

" Gvim specific settings
if has('gui_running')
    set guicursor+=a:blinkon0       " cursor doesn't blink - it's annoying
    set guioptions-=m               " no menubar
    set guioptions-=T               " no toolbar
    set guioptions-=l               " no scrollbar left
    set guioptions-=L               " no scrollbar left when split
    set guioptions-=r               " no scrollbar right
    set guioptions-=r               " no scrollbar right when split
    set lines=40 columns=100

    set gfn=Inconsolata\ 12
    colorscheme nucolors
else
    if $TERM =~ '^rxvt-unicode-256color'
        set t_Co=256
        colorscheme xdefaults
    elseif $TERM =~ '^rxvt-unicode'
        set t_Co=88
        colorscheme default 
    elseif $TERM =~ '^xterm.*'
        set t_Co=256
        colorscheme xdefaults
    elseif $TERM =~ '^linux'
        set t_Co=8
        colorscheme default
    else
        set t_Co=16
        colorscheme default
    endif
endif

set cmdheight=1                 " command line height
set ruler                       " show cursor position in status line
set showmode                    " show mode in status line
set showcmd                     " show partial commands in status line
set number                      " show line numbers
set cursorline                  " highlight the line where the cursor is

" }}}

 " Settings {{{

" Backup files {{{
set undodir=/tmp              " put those files where they will be trashed upon reboot
set undofile
set undolevels=1000           " maximum number of changes that can be undone
set undoreload=10000          " maximum number lines to save for undo on a buffer reload
set nobackup
set noswapfile
" }}}

" Tabstops {{{
set autoindent
set smartindent
set tabstop=4
set textwidth=80
set shiftwidth=4
set softtabstop=4
set expandtab
" }}}

" Folding {{{
set foldmethod=marker
set foldcolumn=0
" }}}

" Pairings {{{
set showmatch
" }}}

" Completion {{{
set completeopt=menu,menuone,longest
set pumheight=15
" }}}

" Wrapping {{{
set linebreak
set showbreak=â†³\ 
" }}}

" Scroll margins {{{
set scrolloff=5
set sidescroll=5
" }}}

"  Keybindings {{{

" Plugins
nnoremap <silent><F1> :NERDTreeToggle<CR>
nnoremap <silent><F2> :TagbarToggle<CR>
nnoremap <silent><F3> :GundoToggle<CR>

" Quickly edit/reload the vimrc file
nnoremap <silent><leader>ev :e $MYVIMRC<CR>
nnoremap <silent><leader>rv :so $MYVIMRC<CR>

" Toggle paste mode
set pastetoggle=<leader>p

" Toggle cursor line highlighting (on by default)
nnoremap <silent><leader>cl :set cursorline!<CR>

" Clear last search highlighting
nnoremap <silent><CR> :noh<CR><CR>

" }}}

" Plugin-specific {{{

" NERDTree {{{
let g:NERDTreeMinimalUI = 1
let g:NERDTreeWinSize = 25
let g:NERDTreeMouseMode = 3
" }}}

" Tagbar {{{
let g:tagbar_compact = 1
let g:tagbar_expand = 1
let g:tagbar_singleclick = 1
let g:tagbar_autoshowtag = 1
let g:tagbar_width = 30
"  }}}

" Neocomplcache {{{

" }}}

" delimitMate {{{
let g:delimitMate_expand_cr = 1
let g:delimitMate_expand_space = 1
" }}}

" Mini Buffer Explorer {{{
let g:miniBufExplSplitToEdge = 0
let g:miniBufExplUseSingleClick = 1
let g:miniBufExplModSelTarget = 1 
" }}}

" Gundo {{{
let g:gundo_width = 30
let g:gundo_help = 0
let g:gundo_preview_statusline = "Gundo [Preview] %=%-5.(%l,%c%V%) %P"
let g:gundo_tree_statusline = "Gundo [Tree] %=%-5.(%l,%c%V%) %P"
" }}}

" }}}

" }}}
